{
    "Tests" : [
        { 
            "FileName" : "ComponentContainerAll.yaml",
            "ExpectOutcome" : "PASS",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/containerAll.yaml"] 
        },
        { 
            "FileName" : "ComponentContainerMinimum.yaml",
            "ExpectOutcome" : "PASS",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/containerMinimum.yaml"] 
        },
        { 
            "FileName" : "ComponentContainerNoName.yaml",
            "ExpectOutcome" : "components.0: name is required",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/containerNoName.yaml"] 
        },
        { 
            "FileName" : "ComponentContainerBadDedicatedPod.yaml",
            "ExpectOutcome" : "dedicatedPod: Invalid type. Expected: boolean, given: string",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/containerBadDedicatedPod.yaml"] 
        },
        { 
            "FileName" : "ComponentContainerBadExposure.yaml",
            "ExpectOutcome" : "endpoints.0.exposure must be one of the following: \"public\", \"internal\", \"none\"",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/containerBadExposure.yaml"] 
        },
        { 
            "FileName" : "ComponentContainerBadMountSources.yaml",
            "ExpectOutcome" : "mountSources: Invalid type. Expected: boolean, given: string",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/containerBadMountSources.yaml"] 
        },
        { 
            "FileName" : "ComponentContainerBadProtocol.yaml",
            "Disabled" : true,
            "ExpectOutcome" : "protocol must be one of the following: \"http\", \"htpps\", \"ws\", \"wss\",\"tcp\"",
            "Files": [ "devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/containerBadProtocol.yaml"] 
        },
        { 
            "FileName" : "ComponentContainerBadSecure.yaml",
            "ExpectOutcome" : "endpoints.0.secure: Invalid type. Expected: boolean, given: string",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/containerBadSecure.yaml"] 
        },
        { 
            "FileName" : "ComponentContainerEndpointMissingName.yaml",
            "ExpectOutcome" : ".endpoints.0: name is required",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/containerEndpointMissingName.yaml"] 
        },
        { 
            "FileName" : "ComponentContainerEndpointMissingPort.yaml",
            "ExpectOutcome" : "endpoints.0: targetPort is required",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/containerEndpointMissingPort.yaml"] 
        },
        { 
            "FileName" : "ComponentContainerEnvNoName.yaml",
            "ExpectOutcome" : "env.0: name is required",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/containerEnvNoName.yaml"] 
        },
        { 
            "FileName" : "ComponentContainerEnvNoValue.yaml",
            "ExpectOutcome" : "env.0: value is required",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/containerEnvNoValue.yaml"] 
        },
        { 
            "FileName" : "ComponentContainerVolumeMissingName.yaml",
            "ExpectOutcome" : "volumeMounts.0: name is required",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/containerVolumeMissingName.yaml"] 
        },        
        { 
            "FileName" : "ComponentContainerNoImage.yaml",
            "ExpectOutcome" : "image is required",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/containerNoImage.yaml"] 
        },        
        { 
            "FileName" : "ComponentKubernetesAll.yaml",
            "ExpectOutcome" : "PASS",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/kubernetesAll.yaml"] 
        },
        { 
            "FileName" : "ComponentKubernetesMinimum.yaml",
            "ExpectOutcome" : "PASS",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/kubernetesMinimum.yaml"] 
        },
        { 
            "FileName" : "ComponentKubernetesNoName.yaml",
            "ExpectOutcome" : "components.0: name is required",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/kubernetesNoName.yaml"] 
        },
        { 
            "FileName" : "ComponentKubernetesBadExposure.yaml",
            "ExpectOutcome" : "exposure must be one of the following: \"public\", \"internal\", \"none\"",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/kubernetesBadExposure.yaml"] 
        },
        { 
            "FileName" : "ComponentKubernetesBadProtocol.yaml",
            "Disabled" : true,
            "ExpectOutcome" : "protocol must be one of the following: \"http\", \"htpps\", \"ws\", \"wss\",\"tcp\"",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/kubernetesBadProtocol.yaml"] 
        },
        { 
            "FileName" : "ComponentKubernetesBadSecure.yaml",
            "ExpectOutcome" : "secure: Invalid type. Expected: boolean, given: string",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/kubernetesBadSecure.yaml"] 
        },
        { 
            "FileName" : "ComponentKubernetesEndpointMissingName.yaml",
            "ExpectOutcome" : "endpoints.0: name is required",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/kubernetesEndpointMissingName.yaml"] 
        },
        { 
            "FileName" : "ComponentKubernetesEndpointMissingPort.yaml",
            "ExpectOutcome" : "endpoints.0: targetPort is required",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/kubernetesEndpointMissingPort.yaml"] 
        },
        { 
            "FileName" : "ComponentKubernetesMissingInlinedAndUri.yaml",
            "ExpectOutcome" : "Must validate one and only one schema (oneOf)",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/kubernetesMissingInlinedAndUri.yaml"] 
        },
        { 
            "FileName" : "ComponentKubernetesBothInlinedAndUri.yaml",
            "ExpectOutcome" : "Must validate one and only one schema (oneOf)",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/kubernetesBothInlinedAndUri.yaml"] 
        },
        { 
            "FileName" : "ComponentOpenshiftAll.yaml",
            "ExpectOutcome" : "PASS",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/openshiftAll.yaml"] 
        },
        { 
            "FileName" : "ComponentOpenshiftMinimum.yaml",
            "ExpectOutcome" : "PASS",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/openshiftMinimum.yaml"] 
        },
        { 
            "FileName" : "ComponentOpenshiftNoName.yaml",
            "ExpectOutcome" : "components.0: name is required",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/openshiftNoName.yaml"] 
        },
        { 
            "FileName" : "ComponentOpenshiftBadExposure.yaml",
            "ExpectOutcome" : "exposure must be one of the following: \"public\", \"internal\", \"none\"",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/openshiftBadExposure.yaml"] 
        },
        { 
            "FileName" : "ComponentOpenshiftBadProtocol.yaml",
            "Disabled" : true,
            "ExpectOutcome" : "protocol must be one of the following: \"http\", \"htpps\", \"ws\", \"wss\",\"tcp\"",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/openshiftBadProtocol.yaml"] 
        },
        { 
            "FileName" : "ComponentOpenshiftBadSecure.yaml",
            "ExpectOutcome" : "secure: Invalid type. Expected: boolean, given: string",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/openshiftBadSecure.yaml"] 
        },
        { 
            "FileName" : "ComponentOpenshiftEndpointMissingName.yaml",
            "ExpectOutcome" : "endpoints.0: name is required",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/openshiftEndpointMissingName.yaml"] 
        },
        { 
            "FileName" : "ComponentOpenshiftEndpointMissingPort.yaml",
            "ExpectOutcome" : "endpoints.0: targetPort is required",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/openshiftEndpointMissingPort.yaml"] 
        },
        { 
            "FileName" : "ComponentOpenshiftMissingInlinedAndUri.yaml",
            "ExpectOutcome" : "Must validate one and only one schema (oneOf)",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/openshiftMissingInlinedAndUri.yaml"] 
        },
        { 
            "FileName" : "ComponentOpenshiftBothInlinedAndUri.yaml",
            "ExpectOutcome" : "Must validate one and only one schema (oneOf)",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/openshiftBothInlinedAndUri.yaml"] 
        },
        { 
            "FileName" : "ComponentPluginAll.yaml",
            "ExpectOutcome" : "PASS",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/pluginAll.yaml"] 
        },
        { 
            "FileName" : "ComponentPluginMinimum.yaml",
            "ExpectOutcome" : "PASS",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/pluginMinimum.yaml"] 
        },
        { 
            "FileName" : "ComponentPluginNoName.yaml",
            "ExpectOutcome" : "components.0: name is required",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/pluginNoName.yaml"] 
        },
        { 
            "FileName" : "ComponentPluginContainsPlugin.yaml",
            "ExpectOutcome" : "Must validate one and only one schema (oneOf)",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/pluginContainsPlugin.yaml"] 
        },
        { 
            "FileName" : "ComponentPluginIdAndKubernetes.yaml",
            "ExpectOutcome" : "Must validate one and only one schema (oneOf)",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/pluginIdAndKubernetes.yaml"] 
        },
        { 
            "FileName" : "ComponentPluginIdAndUri.yaml",
            "ExpectOutcome" : "Must validate one and only one schema (oneOf)",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/pluginIdAndUri.yaml"] 
        },
        { 
            "FileName" : "ComponentPluginUriAndKubernetes.yaml",
            "ExpectOutcome" : "Must validate one and only one schema (oneOf)",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/pluginUriAndKubernetes.yaml"] 
        },
        { 
            "FileName" : "ComponentPluginMissingIdUriAndKubernetes.yaml",
            "ExpectOutcome" : "Must validate one and only one schema (oneOf)",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/pluginMissingIdUriAndKubernetes.yaml"] 
        },
        { 
            "FileName" : "ComponentVolumeAll",
            "ExpectOutcome" : "PASS",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/volumeAll.yaml"] 
        },
        { 
            "FileName" : "ComponentVolumeNoName",
            "ExpectOutcome" : "components.0: name is required",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/volumeNoName.yaml"] 
        },
        { 
            "FileName" : "ComponentAll.yaml",
            "ExpectOutcome" : "PASS",
            "Files": ["devfiles/v200/components/componentStart.yaml",
                        "devfiles/v200/components/containerAll.yaml",
                        "devfiles/v200/components/kubernetesAll.yaml",
                        "devfiles/v200/components/openshiftAll.yaml",
                        "devfiles/v200/components/openshiftAll.yaml",
                        "devfiles/v200/components/volumeAll.yaml"] 
        }
    ]                             
}